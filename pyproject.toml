[tool.poetry]
name = "streamlit-pydantic-form"
version = "0.0.4"
description = "Streamlit form component defined by a Pydantic model"
authors = ["Shunichiro Nomura <nomura@space.t.u-tokyo.ac.jp>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11"
streamlit = ">=1.11.0"
pydantic = ">=2.5.3"
typing-extensions = ">=4.9.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.1.13"
mypy = "1.8.0"
pytest = "7.4.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120

select = ["ALL"]
ignore = [
    "PLR2004", # magic numbers
    "S101",    # use of assert
    "G",       # logging format
    "ANN101",  # missing type annotation for self in method
    "ANN102",  # missing type annotation for cls in classmethod
    "D100",    # missing docstring in public module
    "D101",    # missing docstring in public class
    "D102",    # missing docstring in public method
    "D103",    # missing docstring in public function
    "D104",    # missing docstring in public package
    "D105",    # missing docstring in magic method
    "D107",    # missing docstring in __init__
    "D203",    # 1 blank line required before class docstring
    "D213",    # multi-line docstring summary should start at the second line
    "PGH003",  # Use specific rule codes when ignoring type issues
    "RET505",  # Unnecessary `else` after `return` statement
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
    "TD003",   # add link on issue into TODO
    "FIX002",  # Line contains TODO
    "ERA001",  # commented-out-code
    "PLR0913", # Too many arguments in function definition
]
